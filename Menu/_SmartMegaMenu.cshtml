@inherits UmbracoTemplatePage
@{
    IPublishedContent firstLevelPage = Umbraco.TypedContentAtRoot().First<IPublishedContent>();
    string headingLink = "";
    string heading = "";
    string test = "";
}

<nav class="padding-left-14 padding-right-14 margin-bottom-20">

    <!-- Mobile menu toggle button (hamburger/x icon) -->
    <input id="main-menu-state" type="checkbox" />
    <label class="main-menu-btn" for="main-menu-state">
        <span class="main-menu-btn-icon"></span> Toggle main menu visibility
    </label>

    <!--First Level-->
    <div class="pull-left">
        <div class="nav-brand"><a href="/"><img src="~/images/header/NHS_informatics_merseyside_strapline.jpg" height="59" width="200" title="Making exceptional service the standard" alt="Making exceptional service the standard" /></a></div>
        @*<h3 class="pull-left"><a href="\" title="Home" class="nav-home">Home</a></h3>*@
    </div>

    <ul id="main-menu" class="sm sm-blue">

        @foreach (var secondLevelPage in firstLevelPage.Children.Where(s => s.IsVisible() == true))
        {
            headingLink = secondLevelPage.Url;
            heading = secondLevelPage.Name;

            <!--Second Level Page-->
            <li class="has-mega-menu">

             @Html.Raw(GetLink(secondLevelPage))

                <!--Third level-->
                @if (secondLevelPage.Children.Where(s => s.IsVisible() == true).Any())
                {
                    @:<ul class="mega-menu">
                        @:<li class="background-color-nhs-dark-red">
                }

                @foreach (var thirdLevelPage in secondLevelPage.Children.Where(s => s.IsVisible() == true))
                {
                    if (thirdLevelPage.IsFirst())
                    {
                        <!--List Arrow-->
                        @:<div class="list-arrow">

                        <!--IsFirst-->
                        @:<div class="column-1-3">
                            @:<h2><a href="@headingLink">@heading</a></h2>
                            @:<ul>
                    }
                    <li class="mega-menu-third-level">@Html.Raw(GetLink(thirdLevelPage))</li>

                    if (thirdLevelPage.IsLast())
                    {
                        <!--IsLast-->
                        @:</ul>
                        @:</div>

                        <!--List Arrow-->
                        @:</div>
                    }
                }

                @if (secondLevelPage.Children.Where(s => s.IsVisible() == true).Any())
                {
                    @:</li>
                    @:</ul>
                }
            </li> <!--has-mega-menu-->
        }
        </ul> <!--class  sm-blue-->
    </nav>

@functions{
    private string GetLink(IPublishedContent ipublishedContent)
    {
        string link;

        if(ipublishedContent.GetPropertyValue<string>("nonClickableInMenu") == "True")
        {
            link = "<a>" + ipublishedContent.Name + "</a>";
        }
        else
        {
            link = "<a href=\"" + ipublishedContent.Url + "\">" + ipublishedContent.Name + "</a>";
        }
        return link;
    }
}